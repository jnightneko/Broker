openapi: 3.1.1
info:
  title: Servicio de filtrado de peticiones - Broker (SFPB)
  description: Servicio encargado de filtrar las peticiones
  license:
    name: BSD-3-Clause
    url: https://opensource.org/license/BSD-3-clause
  version: 1.0.1
servers:
  - url: http://localhost:3761/
    description: Servidor de desarrollo (testeo)
paths:
  /broker/api/rest:
    get:
      summary: Conexión para peticiones externas por GET
      description: Se necesita un objeto con la información del destinatario, siempre devolverá una respuesta independientemente del destinatario (servicio externo)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  properties:
                    uri:
                      type: string
                request:
                  type: object
      responses: 
        '200':
          description: Respueta de la petición
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      uri:
                        type: string
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                      _broker_status:
                        type: integer
                      _broker_message:
                        type: integer
    post:
      summary: Conexión para peticiones externas por POST
      description: Se necesita un objeto con la información del destinatario, siempre devolverá una respuesta independientemente del destinatario (servicio externo)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  properties:
                    uri:
                      type: string
                request:
                  type: object
      responses: 
        '200':
          description: Respueta de la petición
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      uri:
                        type: string
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                      _broker_status:
                        type: integer
                      _broker_message:
                        type: integer
    put:
      summary: Conexión para peticiones externas por PUT
      description: Se necesita un objeto con la información del destinatario, siempre devolverá una respuesta independientemente del destinatario (servicio externo)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  properties:
                    uri:
                      type: string
                request:
                  type: object
      responses: 
        '200':
          description: Respueta de la petición
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      uri:
                        type: string
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                      _broker_status:
                        type: integer
                      _broker_message:
                        type: integer
    patch:
      summary: Conexión para peticiones externas por PATCH
      description: Se necesita un objeto con la información del destinatario, siempre devolverá una respuesta independientemente del destinatario (servicio externo)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  properties:
                    uri:
                      type: string
                request:
                  type: object
      responses: 
        '200':
          description: Respueta de la petición
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      uri:
                        type: string
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                      _broker_status:
                        type: integer
                      _broker_message:
                        type: integer
    delete:
      summary: Conexión para peticiones externas por DELETE
      description: Se necesita un objeto con la información del destinatario, siempre devolverá una respuesta independientemente del destinatario (servicio externo)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  properties:
                    uri:
                      type: string
                request:
                  type: object
      responses: 
        '200':
          description: Respueta de la petición
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      uri:
                        type: string
                  response:
                    type: object
                    properties:
                      data:
                        type: object
                      _broker_status:
                        type: integer
                      _broker_message:
                        type: integer
  /broker/__connection__/**:
    post:
      summary: Redireccionamiento de peticiones
      description: Encargado de redireccionar las peticiones crudas a otros servicios externo de confianza
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses: 
        '200':
          description: Respueta de la petición
          content:
            application/json:
              schema:
                type: object
  broker/POST/registrar:
    post:
      summary: Registra a un nuevo usuario
      description: Ruta disponible de forma libre para el registro de nuevos usuarios. Este endpoint depende el la implementación 
                  del servicio de administración por lo que tendrá que acceder a los requerimientos de ellos para el llenado de un nuevo usuarios en el sistema (empleado)
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '2xx':
          description: Respueta de la petición
          content:
            application/json:
              schema:
                type: object
        '5xx':
          description: Respueta de la petición (error)
          content:
            application/json:
              schema:
                type: object
  /broker/POST/salir:
    post:
      summary: Cierre de sesión
      description: Endpoint para invalidar un token de sesión mediante el broker.
      requestBody:
        content:
          application/json:
            schema:
              type: object
  /broker/usuarios:
    get:
      summary: Obtener todos los usuarios
      description: Devuelve una lista de todos los usuarios registrados.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario con los datos proporcionados.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
  /broker/usuarios/{id}:
    get:
      summary: Obtener usuario por ID
      description: Devuelve los datos del usuario correspondiente al ID proporcionado.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
    delete:
      summary: Eliminar usuario
      description: Elimina un usuario por su ID.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object

  /broker/sesiones:
    get:
      summary: Obtener todas las sesiones
      description: Devuelve una lista con todas las sesiones registradas.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Crear o sobrescribir sesión
      description: Crea una nueva sesión para un usuario o sobrescribe la sesión existente si ya tiene una.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
  /broker/sesiones/{id}:
    get:
      summary: Obtener sesión por ID
      description: Devuelve los datos de la sesión con el ID especificado.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
    put:
      summary: Actualizar estado de sesión
      description: Actualiza el estado (true/false) de una sesión específica.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
    delete:
      summary: Eliminar sesión
      description: Elimina una sesión por su ID.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
  /broker/sesiones/usuario/{idU}:
    get:
      summary: Obtener sesiones por usuario
      description: Lista las sesiones vinculadas a un usuario específico.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object

  /broker/logs:
    get:
      summary: Obtener todos los logs
      description: Devuelve el historial de logs registrados.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Registrar log
      description: Registra un nuevo log automáticamente con la fecha del sistema.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
  /broker/logs/{id}:
    get:
      summary: Obtener log por ID
      description: Devuelve el log con el ID especificado.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
    delete:
      summary: Eliminar log
      description: Elimina un log por su ID.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
  /broker/logs/usuario/{idU}:
    get:
      summary: Obtener logs por usuario
      description: Muestra los logs que pertenecen a un usuario específico.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
  /broker/logs/estado/{idEP}:
    get:
      summary: Obtener logs por estado de petición
      description: Muestra los logs con un estado de petición específico.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object

  /broker/tokens:
    get:
      summary: Obtener todos los tokens
      description: Devuelve una lista con todos los tokens registrados.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Guardar token
      description: Guarda un nuevo token para un usuario, cerrando cualquier token previo.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
  /broker/tokens/{id}:
    get:
      summary: Obtener token por ID
      description: Devuelve el token con el ID especificado.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
    delete:
      summary: Eliminar token
      description: Elimina un token por su ID.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
  /broker/tokens/usuario/{idU}:
    get:
      summary: Obtener tokens por usuario
      description: Lista los tokens asociados a un usuario.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
  /broker/tokens/valor/{token}:
    get:
      summary: Obtener token por valor
      description: Busca un token específico por su valor.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
  /broker/tokens/validar/{token}:
    get:
      summary: Validar token
      description: Verifica si un token aún es válido comparando su fecha de expiración con la actual.
      responses:
        '200':
          description: Petición procesada correctamente
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: string
        nombreUsuario:
          type: string
        estado:
          type: boolean
        servicio:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Sesion:
      type: object
      properties:
        id:
          type: string
        estadoSesion:
          type: boolean
        idU:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Log:
      type: object
      properties:
        id:
          type: string
        descripcion:
          type: string
        fecha:
          type: string
          format: date-time
        metodo:
          type: string
        endPoint:
          type: string
        idU:
          type: string
        idEP:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Token:
      type: object
      properties:
        id:
          type: string
        token:
          type: string
        idU:
          type: string
        fechaInicio:
          type: string
          format: date-time
        fechaExpiracion:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
